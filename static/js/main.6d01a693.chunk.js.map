{"version":3,"sources":["component/Square.js","component/Board.js","component/Helpers.js","component/Game.js","App.js","reportWebVitals.js","index.js"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","value","onClick","borderRadius","width","height","margin","display","gridTemplate","Board","squares","map","square","i","calculateWinner","lines","length","a","b","c","console","log","styles","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","timeInHistory","slice","current","__step","move","destination","step","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d01a693.chunk.js","sourcesContent":["import React from 'react';\n\nconst style ={\n    background:'lightblue',\n    border: '2px solid darkblue',\n    fontSize :'30px',\n    fontWeight: '800',\n    cursor: 'pointer',\n    outline: 'none'\n};\n\nconst Square = ({value, onClick}) => (\n    <button style={style} onClick={onClick}>\n        {value}\n    </button>\n\n);\nexport default Square;","import React from 'react';\n\nimport Square from './Square';\n\n\nconst style ={\n    border: '4px solid darkblue',\n    borderRadius: '10px',\n    width: '250px',\n    height: '250px',\n    margin: '0 auto',\n    display: 'grid',\n    gridTemplate: 'repeat(3,1fr)/ repeat(3,1fr)'\n}\nconst Board =({squares,onClick}) =>(\n    \n         <div style={style}>\n             {squares.map((square,i)=>(\n                 <Square key={i} value={square} onClick={()=> onClick(i)}/>\n             )\n\n             \n             )}\n           \n            </div>\n    )\n\n\nexport default Board;\n","export function calculateWinner(squares){\r\n    const lines= [\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6]\r\n    ];\r\n    for(let i=0; i<lines.length; i++){\r\n        const [a,b,c]= lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n            return squares[a];\r\n        }\r\n\r\n    }\r\n    return null;\r\n}\r\nconst squares=[\r\n    null,null,null,\r\n    'x','x','x',\r\n    null,null,null\r\n];\r\nconsole.log(calculateWinner(squares));","import { useState } from 'react';\n\n\nimport Board from './Board';\n\nimport { calculateWinner } from './Helpers';\n\nconst styles={\n    width: '200px',\n    margin:'20px auto',\n}\nconst Game=()=> {\n   const [history, setHistory] = useState([Array(9).fill(null)]);\n   const [stepNumber,setStepNumber]= useState(0);\n   const [xIsNext, setXisNext]=  useState(true);\n   const winner = calculateWinner(history[stepNumber]);\n    const handleClick= i =>{\n        const timeInHistory =history.slice(0,stepNumber+1)\n        const current = timeInHistory[stepNumber];\n        const squares =[...current];\n       // const boardCopy =[...board]\n        //if user click an occupied square or if game is won,return\n        if(winner || squares[i])\n        return;\n        //put an x or an 0 in the clicked square \n        squares[i]= xIsNext ? 'x' : '0';\n        setHistory([...timeInHistory,squares]);\n        setStepNumber(timeInHistory.length)\n        setXisNext(!xIsNext);\n\n    }\n    const jumpTo=step=> {\n        setStepNumber(step);\n        setXisNext(step % 2 ===0)\n    }\n   const renderMoves=()=> (\n       history.map((__step,move)=>{\n           const destination =move ? `Go to move${move}` : 'Go to start';\n           return(\n               <li key={move}>\n                   <button onClick={()=> jumpTo(move)}>{destination}</button>\n               </li>\n           )\n       })\n       \n   )\n        \n    \n    return (\n        \n        <>\n        <div style={styles}>\n        <h1>{ 'TIC TAC TOE'}</h1>\n        </div>\n        <Board  squares={history[stepNumber]} onClick={handleClick} />\n       <div style={styles}>\n       \n           <p>{winner ? 'winner:' + winner :'Next Player:' +(xIsNext ?'x': '0')}</p>\n           {renderMoves()}\n       </div>\n        </>\n    )\n    }\n\nexport default Game;\n","import React from 'react';\n\nimport Game from './component/Game';\n\nfunction App() {\n  return (\n    <>\n    <Game/>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}